<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.company</groupId>
	<artifactId>order_db</artifactId>
	<version>0.0.0.3</version>
	<packaging>jar</packaging>

	<name>order_db</name>
	<description>order_db for Spring Boot</description>
	<repositories>
		<repository>
			<id>local</id>
			<url>http://maven.aliyun.com/nexus/content/groups/public</url>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/libs-milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.9.RELEASE</version>
	</parent>


	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<spring-cloud.version>Edgware.SR3</spring-cloud.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-eureka-server</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-bus-amqp</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-eureka-server</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>

		</dependency>

		<!-- test dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- 支持 @ConfigurationProperties 注解 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>com.xinwei.nnl</groupId>
			<artifactId>nnl-commons</artifactId>
			<version>1.9.1</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/nnl-commons-1.9.1.jar</systemPath>

		</dependency>


		<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>


		<!-- https://mvnrepository.com/artifact/org.springframework.data/spring-data-jpa 
			<dependency> <groupId>org.springframework.data</groupId> <artifactId>spring-data-jpa</artifactId> 
			</dependency> -->


		<!-- 热部署支持 <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-devtools</artifactId> 
			<optional>true</optional> </dependency> -->

		<!-- aop -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>

		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>

		<!--mybatis的依赖。匹配spring Boot1.5 or higher -->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>1.3.0</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.7</version>
		</dependency>
		<!--mybatis 分页查询 -->
		<dependency>
			<groupId>com.github.pagehelper</groupId>
			<artifactId>pagehelper-spring-boot-starter</artifactId>
			<version>1.2.3</version>
		</dependency>

		<!-- Hessian -->
		<dependency>
			<groupId>com.caucho</groupId>
			<artifactId>hessian</artifactId>
			<version>4.0.38</version>
		</dependency>
		<!--引入lib目录中的第三方包 <dependency> <groupId>com</groupId> <artifactId>security_access_service</artifactId> 
			<version>1.0</version> <scope>system</scope> <systemPath>${basedir}/lib/security_access_service.jar</systemPath> 
			</dependency> -->
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<!-- delete file="${project.build.directory}/classes/jdbc.properties" 
									/ <copy file="${project.build.outputDirectory}/application.properties" tofile="${project.build.directory}/application.properties" 
									/> <copy file="${project.build.outputDirectory}/application.yml" tofile="${project.build.directory}/application.yml" 
									/> -->
								<copy todir="${project.build.directory}" overwrite="true">
									<fileset dir="src/main/resources">
										<include name="**/*.properties" />
										<include name="*.yml" />
										<include name="*.sh" />
									</fileset>
									<fileset dir="src/test/java/db_design">
										<include name="*.sql" />
									</fileset>
								</copy>
								<replace token="xxxx.jar" value="${project.build.finalName}.jar">
									<fileset dir="${project.build.directory}">
										<include name="*.sh" />
									</fileset>
								</replace>

							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>



		</plugins>
		<!-- 引入第三方包，打包需要引入 -->
		<resources>
			<resource>
				<directory>lib</directory>
				<targetPath>BOOT-INF/lib/</targetPath>
				<includes>
					<include>**/*.jar</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<targetPath>BOOT-INF/classes/</targetPath>
			</resource>
			<!-- resource> <directory>src/main/resources</directory> <includes> <include>*.properties</include> 
				<include>*.sh</include> <include>*.yml</include> </includes> <targetPath>target/${project.version}</targetPath> 
				</resource -->
		</resources>
		<directory>target/${project.version}</directory>
		<outputDirectory>target/classes</outputDirectory>
	</build>
	<!-- profiles> <profile> <id>window</id> <properties> <npm>npm.cmd</npm> 
		</properties> <activation> <activeByDefault>true</activeByDefault> </activation> 
		</profile> <profile> <id>linux</id> <properties> <npm>npm</npm> </properties> 
		</profile> </profiles -->

</project>
